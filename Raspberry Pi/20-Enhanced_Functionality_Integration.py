import serial
import time

# Set up serial communication
serial = serial.Serial('/dev/ttyS0', 9600) #connect Rx pin to GPIO14 and Tx pin to GPIO15

# Extra_Function
Add_End_Char = 0x01
Without_End_Char = 0x00

Add_Suffix = 0x02
Without_Suffix = 0x00

Add_Code_ID = 0x04
Without_Code_ID = 0x00

Add_Prefix = 0x08
Without_Prefix = 0x00

Add_RF = 0x10
Without_RF = 0x00

CR = 0x00  # End_Char_Suffix_Type
CRLF = 0x20  # End_Char_Suffix_Type
TAB = 0x40  # End_Char_Suffix_Type
none = 0x60  # End_Char_Suffix_Type

# Prefix_And_Suffix_length
Prefix_Length = 0x20  # 0x00 :0, 0x10 :1, 0x20 :2, ......, 0xF0 :15
Suffix_Length = 0x01  # 0x00 :0,0x01 :1, 0x02 :2, ......, 0x0F :15

# Data_intercept_setting
All = 0x00  # Send all Data
M_Data = 0x01  # Send first M Data
N_Data = 0x02  # Send last N Data
None_data = 0x03  # Don’t send the first M+ the last N Data

Enhanced_Functionality_Integration = bytes([0x7E, 0x00, 0x08, 0x01, 0x00, 0x60, Without_End_Char + Add_Suffix + Without_Code_ID + Add_Prefix + Without_RF + none, 0xAB, 0xCD])

Prefix_And_Suffix_length = bytes([0x7E, 0x00, 0x08, 0x01, 0x00, 0x62, Prefix_Length + Suffix_Length, 0xAB, 0xCD])

Prefix_data = bytes([0x7E, 0x00, 0x08, 0x01, 0x00, 0x64 #0x63 - 0x71 Address
                , 0x64 #0x00 - 0xFF Max 15Byte
                , 0xAB, 0xCD])
Suffix_data = bytes([0x7E, 0x00, 0x08, 0x01, 0x00, 0x72 #0x72 - 0x80 Address
                , 0x4B #0x00 - 0xFF Max 15Byte
                , 0xAB, 0xCD])

RF_Length = bytes([0x7E, 0x00, 0x08, 0x01, 0x00, 0x81, 0x00 #0x00 - 0x0F
            , 0xAB, 0xCD])
RF_Data = bytes([0x7E, 0x00, 0x08, 0x01, 0x00, 0x82 #0x82 - 0x90
            , 0x00 #0x00 - 0xFF Max 15
            , 0xAB, 0xCD])

Code_ID = bytes([0x7E, 0x00, 0x08, 0x01, 0x00, 0x91 #0x91 - 0xA4 
            , 0x00 #0x41-0x5a & 0x61-0x7a（A-Z,a-z）：Relater to Code ID character 
            , 0xAB, 0xCD])
Data_intercept_setting = bytes([0x7E, 0x00, 0x08, 0x01, 0x00, 0xB0, None_data, 0xAB, 0xCD])

Length_of_interception_M = bytes([0x7E, 0x00, 0x08, 0x01, 0x00, 0xB1, 0x05 #0x00-0xFF：0-255
                            , 0xAB, 0xCD])
Length_of_interception_N = bytes([0x7E, 0x00, 0x08, 0x01, 0x00, 0xB2, 0x00 #0x00-0xFF：0-255
                            , 0xAB, 0xCD])

SAVE_TO_FLASH = bytes([0x7E, 0x00, 0x09, 0x01, 0x00, 0x00, 0x00, 0xDE, 0xC8])

serial.write(Enhanced_Functionality_Integration)
time.sleep(0.1)  # Add a delay between commands
serial.write(SAVE_TO_FLASH)
time.sleep(0.1)  # Add a delay between commands
    
# Read data from the Barcode Scanner Module:
while True:
    # Read data from the UART
    data = serial.readline()

    # If there is data, print it to the console
    if data:
        print(data)

    time.sleep(1)
#--------------------------------------------